/*
  filename: integralui.listview.js
  version : 1.2.0
  Copyright Â© 2016-2017 Lidor Systems. All rights reserved.

  This file is part of the "IntegralUI Web" Library. 
                                                                   
  The contents of this file are subject to the IntegralUI Web License, and may not be used except in compliance with the License.
  A copy of the License should have been installed in the product's root installation directory or it can be found at
  http://www.lidorsystems.com/products/web/studio/license-agreement.aspx.
                                                            
  This SOFTWARE is provided "AS IS", WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for the specific language 
  governing rights and limitations under the License. Any infringement will be prosecuted under applicable laws.                           
*/
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Component, ComponentFactoryResolver, ContentChild, ContentChildren, ElementRef, Input, Renderer, TemplateRef, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';
import { IntegralUIBaseService, IntegralUIObjectState, IntegralUIScrollMode, IntegralUITComponent } from './integralui.core';
import { IntegralUICommonService } from '../services/integralui.common.service';
import { IntegralUIDataService } from '../services/integralui.data.service';
import { IntegralUIDragDropService } from '../services/integralui.dragdrop.service';
import { IntegralUIFilterService } from '../services/integralui.filter.service';
import { IntegralUIBaseList } from './integralui.base.list';
import { IntegralUIListItem } from './integralui.listitem';
var IntegralUIListView = (function (_super) {
__extends(IntegralUIListView,_super);
function IntegralUIListView(a,b,d,c,e,g,h,k){var f=_super.call(this,a,b,d,c,e,g)||this;f.dataService=a;f.dragDropService=b;f.elemRef=d;f.elemRenderer=c;f.commonService=e;f.filterService=g;f.cmpResolver=h;f.baseService=k;f.clientSpace={width:0,height:0};f.contentPos={top:0,left:0};f.currentItemSize={width:0,height:0};f.itemsPerColumn=0;f.itemsPerRow=0;f.numColumns=0;f.numRows=0;f.currentScrollMode=IntegralUIScrollMode.Horizontal;f.overflowSettings={horizontal:"auto",vertical:"auto"};f.trialRef=null;
f.itemList=[];return f}Object.defineProperty(IntegralUIListView.prototype,"itemSize",{get:function(){return this.currentItemSize},set:function(a){a&&(this.currentItemSize={width:0<a.width?a.width+4:0,height:0<a.height?a.height+4:0},this.updateLayout())},enumerable:!0,configurable:!0});
Object.defineProperty(IntegralUIListView.prototype,"scrollMode",{get:function(){return this.currentScrollMode},set:function(a){this.currentScrollMode!=a&&(this.currentScrollMode=a,this.contentPos={top:0,left:0},this.updateLayout())},enumerable:!0,configurable:!0});
IntegralUIListView.prototype.updateOverflowSettings=function(){this.overflowSettings=0!=this.virtualMode?{horizontal:"hidden",vertical:"hidden"}:this.currentScrollMode==IntegralUIScrollMode.Horizontal?{horizontal:"auto",vertical:"hidden"}:{horizontal:"hidden",vertical:"auto"}};
IntegralUIListView.prototype.ngOnInit=function(){this.baseService.setComponent(this);this.updateData();this.updateCurrentList();this.generalClassName="iui-listview";this.itemClassName="iui-listitem";this.itemContentClassName=this.itemClassName+"-content";this.initStyle()};IntegralUIListView.prototype.updateData=function(){this.dataService.init([{data:this.items}])};
IntegralUIListView.prototype.ngAfterViewInit=function(){var a=this,b=setTimeout(function(){var d=a.cmpResolver.resolveComponentFactory(IntegralUITComponent);d&&a.contentRef&&(a.trialRef=a.contentRef.createComponent(d));clearTimeout(b)},100)};IntegralUIListView.prototype.ngAfterContentInit=function(){this.updateLayout()};IntegralUIListView.prototype.ngOnDestroy=function(){this.removeDropMark();this.updateTimer&&clearTimeout(this.updateTimer);this.trialRef&&this.trialRef.destroy()};
IntegralUIListView.prototype.addItem=function(a){this.callEventAdd("add",a)};IntegralUIListView.prototype.clearItems=function(){this.dataService.clear();this.clear.emit(null)};IntegralUIListView.prototype.insertItemAt=function(a,b){this.callEventAdd("at",a,b)};IntegralUIListView.prototype.removeItemAt=function(a){return this.callEventRemove(null,a)};
IntegralUIListView.prototype.itemDragOver=function(a,b,d,c){var e=this.getItemElemList();e&&0<=d&&d<e.length&&(d=this.commonService.getPageRect(e[d].nativeElement),this.processDragOver(a,b.data,{x:d.left,y:d.top,width:d.right-d.left,height:d.bottom-d.top},c));a.stopPropagation()};IntegralUIListView.prototype.updateCurrentList=function(){var a=this;a.currentList.length=0;var b=a.dataService.getList();b&&(a.applySorting(b),b.forEach(function(b){a.addItemToCurrentList(b)}))};
IntegralUIListView.prototype.addItemToCurrentList=function(a){a.type="item";a[this.options.dataFields.id]||(a[this.options.dataFields.id]=this.commonService.getUniqueId());this.isItemAllowed(a)&&this.currentList.push({data:a})};
IntegralUIListView.prototype.updateScrollItemList=function(){this.scrollItemList.length=0;for(var a={x:0,y:0},b=0,d=this.currentIndex;d<this.currentList.length&&d<this.currentIndex+this.visibleRange;d++,b++){var c={data:this.currentList[d].data,index:d-this.currentIndex,position:{x:0,y:0},style:{},tabIndex:b};this.scrollMode==IntegralUIScrollMode.Horizontal?(a.y+this.currentItemSize.height>this.clientSpace.height&&(a={x:a.x+this.currentItemSize.width,y:0}),c.position={x:a.x,y:a.y},a.y+=this.currentItemSize.height):
(a.x+this.currentItemSize.width>this.clientSpace.width&&(a={x:0,y:a.y+this.currentItemSize.height}),c.position={x:a.x,y:a.y},a.x+=this.currentItemSize.width);this.updateItemStyle(c);this.scrollItemList.push(c)}};IntegralUIListView.prototype.getItem=function(a){return this.items&&(this.updateItemList(),a=this.itemList.indexOf(a),0<=a&&a<this.items.length)?this.items[a]:null};
IntegralUIListView.prototype.getItemFromComponent=function(a){return a&&a.data?a.data:this.items&&(this.updateItemList(),a=this.itemList.indexOf(a),0<=a&&a<this.items.length)?this.items[a]:null};IntegralUIListView.prototype.getItemIndex=function(a){return this.itemList&&0<this.itemList.length?this.itemList.indexOf(a):-1};IntegralUIListView.prototype.updateItemList=function(){this.contentList&&(this.itemList=this.contentList.toArray())};
IntegralUIListView.prototype.processDownArrowKey=function(a,b){var d=this.getDownItem(a);if(d){this.currentFocusItem=d.data;var c=this,e=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(e)},1),g=Math.floor(this.visibleRange/2);c.scrollMode==IntegralUIScrollMode.Horizontal?d.index>=g-this.itemsPerColumn&&this.scrollPos({x:this.currentScrollPos.x+this.itemSize.width,y:this.currentScrollPos.y}):d.index>=g-this.itemsPerRow&&this.scrollPos({x:this.currentScrollPos.x,y:this.currentScrollPos.y+
this.itemSize.height})}return d};IntegralUIListView.prototype.processEndKey=function(a,b){var d=null,c=this;0<c.scrollItemList.length&&(c.scrollMode==IntegralUIScrollMode.Horizontal?c.scrollPos({x:c.maxScrollPos.x,y:c.currentScrollPos.y}):c.scrollPos({x:c.currentScrollPos.x,y:c.maxScrollPos.y}),setTimeout(function(){d=c.scrollItemList[c.scrollItemList.length-1];c.currentFocusItem=d.data;var a=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(a)},1)},1));return d};
IntegralUIListView.prototype.processHomeKey=function(a,b){var d=null,c=this;0<c.scrollItemList.length&&(c.scrollMode==IntegralUIScrollMode.Horizontal?c.scrollPos({x:0,y:c.currentScrollPos.y}):c.scrollPos({x:c.currentScrollPos.x,y:0}),setTimeout(function(){d=c.scrollItemList[0];c.currentFocusItem=d.data;var a=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(a)},1)},1));return d};
IntegralUIListView.prototype.processLeftArrowKey=function(a,b){var d=this.getLeftItem(a);if(d){this.currentFocusItem=d.data;var c=this,e=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(e)},1);c.scrollMode==IntegralUIScrollMode.Horizontal?d.index<this.itemsPerColumn&&this.scrollPos({x:this.currentScrollPos.x-this.itemSize.width,y:this.currentScrollPos.y}):d.index<this.itemsPerRow&&this.scrollPos({x:this.currentScrollPos.x,y:this.currentScrollPos.y-this.itemSize.height})}return d};
IntegralUIListView.prototype.processPageDownKey=function(a,b){var d=null,c=this;if(0<c.scrollItemList.length){var e=0;c.scrollMode==IntegralUIScrollMode.Horizontal?(e=Math.floor((this.visibleRange-2*this.itemsPerColumn)/2),0<c.itemsPerColumn&&c.scrollPos({x:c.currentScrollPos.x+Math.floor(e*c.itemSize.width/this.itemsPerColumn),y:c.currentScrollPos.y})):(e=Math.floor((this.visibleRange-2*this.itemsPerRow)/2),0<c.itemsPerRow&&c.scrollPos({x:c.currentScrollPos.x,y:c.currentScrollPos.y+Math.floor(e*
c.itemSize.height/this.itemsPerRow)}));setTimeout(function(){var e=0<=a.index&&a.index<c.scrollItemList.length?a.index:c.scrollItemList.length-1;e=c.scrollMode==IntegralUIScrollMode.Horizontal?c.currentScrollPos.x==c.maxScrollPos.x?c.scrollItemList.length-1:e:c.currentScrollPos.y==c.maxScrollPos.y?c.scrollItemList.length-1:e;d=c.scrollItemList[e];c.currentFocusItem=d.data;var h=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(h)},1)},1)}return d};
IntegralUIListView.prototype.processPageUpKey=function(a,b){var d=null,c=this;if(0<c.scrollItemList.length){var e=0;c.scrollMode==IntegralUIScrollMode.Horizontal?(e=Math.floor((this.visibleRange-2*this.itemsPerColumn)/2),0<c.itemsPerColumn&&c.scrollPos({x:c.currentScrollPos.x-Math.floor(e*c.itemSize.width/this.itemsPerColumn),y:c.currentScrollPos.y})):(e=Math.floor((this.visibleRange-2*this.itemsPerRow)/2),0<c.itemsPerRow&&c.scrollPos({x:c.currentScrollPos.x,y:c.currentScrollPos.y-Math.floor(e*c.itemSize.height/
this.itemsPerRow)}));setTimeout(function(){var e=0<=a.index&&a.index<c.scrollItemList.length?a.index:0;e=c.scrollMode==IntegralUIScrollMode.Horizontal?0==c.currentScrollPos.x?0:e:0==c.currentScrollPos.y?0:e;d=c.scrollItemList[e];c.currentFocusItem=d.data;var h=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(h)},1)},1)}return d};
IntegralUIListView.prototype.processRightArrowKey=function(a,b){var d=this.getRightItem(a);if(d){this.currentFocusItem=d.data;var c=this,e=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(e)},1),g=Math.floor(this.visibleRange/2);c.scrollMode==IntegralUIScrollMode.Horizontal?d.index>=g-this.itemsPerColumn&&this.scrollPos({x:this.currentScrollPos.x+this.itemSize.width,y:this.currentScrollPos.y}):d.index>=g-this.itemsPerRow&&this.scrollPos({x:this.currentScrollPos.x,y:this.currentScrollPos.y+
this.itemSize.height})}return d};IntegralUIListView.prototype.processUpArrowKey=function(a,b){var d=this.getUpItem(a);if(d){this.currentFocusItem=d.data;var c=this,e=setTimeout(function(){c.processSelection(b,d.data);clearTimeout(e)},1);c.scrollMode==IntegralUIScrollMode.Horizontal?d.index<this.itemsPerColumn&&this.scrollPos({x:this.currentScrollPos.x-this.itemSize.width,y:this.currentScrollPos.y}):d.index<this.itemsPerRow&&this.scrollPos({x:this.currentScrollPos.x,y:this.currentScrollPos.y-this.itemSize.height})}return d};
IntegralUIListView.prototype.getDownItem=function(a){var b=0<=a.index&&a.index<this.scrollItemList.length-1?a.index+1:-1;this.scrollMode!=IntegralUIScrollMode.Horizontal&&(b=a.index+this.itemsPerRow,b=0<=b&&b<this.scrollItemList.length?b:-1);return 0<=b?this.scrollItemList[b]:null};
IntegralUIListView.prototype.getLeftItem=function(a){var b=a.index-this.itemsPerColumn;b=0<=b&&b<this.scrollItemList.length?b:-1;this.scrollMode!=IntegralUIScrollMode.Horizontal&&(b=0<a.index?a.index-1:-1);return 0<=b&&b<this.scrollItemList.length?this.scrollItemList[b]:null};
IntegralUIListView.prototype.getRightItem=function(a){var b=a.index+this.itemsPerColumn;b=0<=b&&b<this.scrollItemList.length?b:-1;this.scrollMode!=IntegralUIScrollMode.Horizontal&&(b=0<=a.index&&a.index<this.scrollItemList.length-1?a.index+1:-1);return 0<=b&&b<this.scrollItemList.length?this.scrollItemList[b]:null};
IntegralUIListView.prototype.getUpItem=function(a){var b=0<a.index?a.index-1:-1;this.scrollMode!=IntegralUIScrollMode.Horizontal&&(b=a.index-this.itemsPerRow,b=0<=b&&b<this.scrollItemList.length?b:-1);return 0<=b?this.scrollItemList[b]:null};IntegralUIListView.prototype.getContentSize=function(){return this.contentElem?{width:this.contentElem.nativeElement.offsetWidth,height:this.contentElem.nativeElement.offsetHeight}:{width:0,height:0}};
IntegralUIListView.prototype.updateLayout=function(){this.allowUpdate&&(this.updateOverflowSettings(),0!=this.virtualMode?this.updateLayoutVirtual():this.updateLayoutNormal())};
IntegralUIListView.prototype.updateLayoutNormal=function(){var a=this,b=setTimeout(function(){a.updateCurrentList();a.updateItemList();if(a.itemList&&0<a.itemList.length){var d={x:0,y:0};a.scrollMode==IntegralUIScrollMode.Horizontal?a.itemList.forEach(function(c){var b=c.getSize();d.y+b.height>a.elemRef.nativeElement.firstElementChild.clientHeight&&(d={x:d.x+b.width,y:0});c.updatePos(d);d.y+=b.height}):a.itemList.forEach(function(c){var b=c.getSize();d.x+b.width>a.elemRef.nativeElement.firstElementChild.clientWidth&&
(d={x:0,y:d.y+b.height});c.updatePos(d);d.x+=b.width})}a.selectedItem&&a.updateSelectedItem(a.selectedItem);a.updateComplete.emit(null);clearTimeout(b)},10)};
IntegralUIListView.prototype.updateLayoutVirtual=function(){var a=this;a.updateTimer=setTimeout(function(){a.updateCurrentList();0==a.currentList.length&&(a.currentScrollPos={x:0,y:0});a.clientRect={width:a.elemRef.nativeElement.firstElementChild.clientWidth,height:a.elemRef.nativeElement.firstElementChild.clientHeight};a.updateScrollItemList();var b=setTimeout(function(){a.updateBlockSize();a.avgItemHeight=a.itemSize.height;a.updateScrollSize();a.updateVisibleRange();a.updateScrollItemList();a.refresh();
a.updateComplete.emit(null);clearTimeout(b)},1);clearTimeout(a.updateTimer)},100)};
IntegralUIListView.prototype.updateScrollSize=function(){this.contentSize={width:this.clientRect.width,height:this.clientRect.height};if(this.currentScrollMode==IntegralUIScrollMode.Horizontal){this.itemsPerColumn=Math.floor(this.clientRect.height/this.itemSize.height);var a=0<this.itemsPerColumn?this.currentList.length/this.itemsPerColumn:0;this.numColumns=Math.floor(a);this.numColumns<a&&this.numColumns++;a=this.numColumns*this.itemSize.width-this.clientRect.width+2;0<a&&(this.itemsPerColumn=Math.floor((this.clientRect.height-
16)/this.itemSize.height),a=0<this.itemsPerColumn?this.currentList.length/this.itemsPerColumn:0,this.numColumns=Math.floor(a),this.numColumns<a&&this.numColumns++,a=this.numColumns*this.itemSize.width-this.clientRect.width+2);this.scrollSize.width=a;this.contentSize.width+=this.itemSize.width}else this.itemsPerRow=Math.floor(this.clientRect.width/this.itemSize.width),a=0<this.itemsPerRow?this.currentList.length/this.itemsPerRow:0,this.numRows=Math.floor(a),this.numRows<a&&this.numRows++,a=this.numRows*
this.itemSize.height-this.clientRect.height+2,0<a&&(this.itemsPerRow=Math.floor((this.clientRect.width-16)/this.itemSize.width),a=0<this.itemsPerRow?this.currentList.length/this.itemsPerRow:0,this.numRows=Math.floor(a),this.numRows<a&&this.numRows++,a=this.numRows*this.itemSize.height-this.clientRect.height+2),this.scrollSize.height=a,this.contentSize.height+=this.itemSize.height;this.isVerScrollVisible()&&(this.contentSize.width-=18,0<this.scrollSize.width&&(this.scrollSize.width+=16));this.isHorScrollVisible()&&
(this.scrollSize.height+=16);this.scrollSize.width=0<this.scrollSize.width?this.scrollSize.width:0;this.scrollSize.height=0<this.scrollSize.height?this.scrollSize.height:0;this.maxScrollPos={x:this.scrollSize.width,y:this.scrollSize.height};this.currentScrollPos.x>this.maxScrollPos.x&&this.changeHorizontalScrollPos(this.maxScrollPos.x);this.currentScrollPos.y>this.maxScrollPos.y&&this.changeVerticalScrollPos(this.maxScrollPos.y);this.scrollBarSize={width:this.isVerScrollVisible()?this.clientRect.width-
20:this.clientRect.width-4,height:this.isHorScrollVisible()?this.clientRect.height-20:this.clientRect.height-4};this.scrollLargeChange={x:this.scrollBarSize.width,y:this.scrollBarSize.height};this.clientSpace={width:this.clientRect.width,height:this.clientRect.height};this.isHorScrollVisible()&&(this.clientSpace.height-=16);this.isVerScrollVisible()&&(this.clientSpace.width-=16)};
IntegralUIListView.prototype.updateVisibleRange=function(){this.visibleRange=1;var a=this.getItemElemList();a&&0<a.length&&(this.visibleRange=this.currentScrollMode==IntegralUIScrollMode.Horizontal?2*Math.floor(this.clientSpace.height/this.itemSize.height)*(Math.floor(this.clientSpace.width/this.itemSize.width)+1):2*(Math.floor(this.clientSpace.height/this.itemSize.height)+1)*Math.floor(this.clientSpace.width/this.itemSize.width))};
IntegralUIListView.prototype.getItemElemList=function(){return this.itemElems?this.itemElems.toArray():null};IntegralUIListView.prototype.changeHorizontalScrollPos=function(a){this.currentScrollPos.x=Math.max(0,Math.min(a,this.maxScrollPos.x));this.currentScrollPos.x!=this.prevScrollPos.x&&(this.updateView(),this.scrollPosChanged.emit({value:this.scrollPos()}),this.prevScrollPos.x=this.currentScrollPos.x)};
IntegralUIListView.prototype.isVerScrollVisible=function(){return this.virtualMode&&this.currentScrollMode!=IntegralUIScrollMode.Horizontal?0<this.scrollSize.height?!0:!1:!1};IntegralUIListView.prototype.isHorScrollVisible=function(){return this.virtualMode&&this.currentScrollMode!=IntegralUIScrollMode.Vertical?0<this.scrollSize.width?!0:!1:!1};IntegralUIListView.prototype.onHorizontalScrollChanged=function(a){this.changeHorizontalScrollPos(a.value)};
IntegralUIListView.prototype.updateView=function(){if(this.currentScrollMode==IntegralUIScrollMode.Horizontal){var a=Math.floor(this.clientSpace.height/this.itemSize.height),b=Math.floor(this.currentScrollPos.x/this.itemSize.width);this.contentPos.left=this.currentScrollPos.x-b*this.itemSize.width}else a=Math.floor(this.clientSpace.width/this.itemSize.width),b=Math.floor(this.currentScrollPos.y/this.itemSize.height),this.contentPos.top=this.currentScrollPos.y-b*this.itemSize.height;this.currentIndex=
b*a;this.currentIndex!=this.prevIndex&&(this.updateScrollItemList(),this.prevIndex=this.currentIndex)};IntegralUIListView.prototype.listViewMouseWheel=function(a){this.processMouseWheel(a,this.scrollMode==IntegralUIScrollMode.Horizontal)};
IntegralUIListView.prototype.scrollTo=function(a){0!=this.virtualMode&&a&&(a=this.getItemCurrentIndex(a),0<=a&&(this.currentScrollMode==IntegralUIScrollMode.Horizontal?0<this.itemsPerColumn&&0<this.itemSize.width&&(a=this.itemSize.width*(a/this.itemsPerColumn-Math.floor(this.clientSpace.width/this.itemSize.width)+1),this.scrollPos({x:a,y:this.currentScrollPos.y})):0<this.itemsPerRow&&0<this.itemSize.height&&(a=this.itemSize.height*(a/this.itemsPerRow-Math.floor(this.clientSpace.height/this.itemSize.height)+
1),this.scrollPos({x:this.currentScrollPos.x,y:a})),this.updateLayout()))};IntegralUIListView.prototype.clearSelection=function(){this.updateItemList();this.itemList&&0<this.itemList.length&&this.itemList.forEach(function(a){a.state&=~IntegralUIObjectState.selected})};IntegralUIListView.prototype.selectItem=function(a){a&&(this.clearSelection(),a.state|=IntegralUIObjectState.selected)};
IntegralUIListView.prototype.updateSelectedItemFromElem=function(a){if(this.itemList&&0<this.itemList.length){var b=-1;a&&(b=this.itemList.indexOf(a));0<=b&&b<this.items.length&&(this.selectedItem=this.items[b])}};IntegralUIListView.prototype.updateSelectedItem=function(a){if(this.items&&0<this.items.length){var b=-1;a&&(b=this.items.indexOf(a));0<=b&&b<this.itemList.length&&this.selectItem(this.itemList[b])}};
IntegralUIListView.prototype.resetRefresh=function(){this.refreshTimer&&clearTimeout(this.refreshTimer);this.refreshTimer=null};
IntegralUIListView.prototype.refresh=function(a){this.resetRefresh();if(0!=this.virtualMode)for(this.updateControlClass(),a=0;a<this.scrollItemList.length;a++)this.updateItemStyle(this.scrollItemList[a]);else for(this.updateItemList(),this.clearComponentSelection(),a=0;a<this.currentSelectedItems.length;a++){var b=this.getItemCurrentIndex(this.currentSelectedItems[a]);this.isComponentIndexInRange(b)&&(this.itemList[b].state|=IntegralUIObjectState.selected)}};    return IntegralUIListView;
}(IntegralUIBaseList));
export { IntegralUIListView };
IntegralUIListView.decorators = [
    { type: Component, args: [{
                selector: 'iui-listview',
                template: "\n\t\t<div [ngClass]=\"getControlClass()\" (mousewheel)=\"listViewMouseWheel($event)\" (mouseenter)=\"onCtrlMouseEnter($event)\" (mouseleave)=\"onCtrlMouseLeave($event)\" (dragleave)=\"ctrlDragLeave($event)\" (dragover)=\"ctrlDragOver($event)\" (drop)=\"ctrlDragDrop($event)\" (scroll)=\"onScroll($event)\" [ngStyle]=\"{ 'overflow-x': overflowSettings.horizontal, 'overflow-y': overflowSettings.vertical }\">\n            <div [ngSwitch]=\"virtualMode\" #content>\n                <span *ngSwitchCase=\"true\">\n\t                <ul style=\"position:absolute;margin:0;padding:0;\" [ngStyle]=\"{ 'left': -contentPos.left + 'px', 'top': -contentPos.top + 'px', width: contentSize.width + 'px', height: contentSize.height + 'px' }\">\n\t\t\t\t        <li [ngClass]=\"item.style.general\" *ngFor=\"let item of scrollItemList; let i = index\" (click)=\"itemClickEvent($event, item)\" (mousedown)=\"itemMouseDown($event, item)\" (mouseup)=\"itemMouseUp($event, item)\" (mouseenter)=\"itemMouseEnter($event, item)\" (mouseleave)=\"itemMouseLeave($event, item)\" draggable=\"true\" (dragstart)=\"itemDragStart($event, item)\" (dragover)=\"itemDragOver($event, item, i, true)\" (drop)=\"itemDragDrop($event, item)\"  [ngStyle]=\"{ 'position': 'absolute', 'top': item.position.y + 'px', 'left': item.position.x + 'px', width: currentItemSize.width - 4 + 'px', height: currentItemSize.height - 4 + 'px' }\" #itemElem>\n\t\t\t\t            <div [ngClass]=\"item.style.content\" tabindex=\"{{item.tabIndex}}\" [iuiFocus]=\"item.data == this.currentFocusItem\" (focus)=\"itemGotFocus(item)\" (blur)=\"itemLostFocus(item)\" (keydown)=\"itemKeyDown($event, item)\" (keypress)=\"itemKeyPress($event, item)\" (keyup)=\"itemKeyUp($event, item)\">\n\t\t\t\t\t\t\t\t<span [iuiTemplateOutlet]=\"itemTemplate\" [iuiTemplateOutletContext]=\"{$implicit: (item.data)}\"></span>\n\t\t\t\t            </div>\n\t\t\t\t        </li>\n\t\t\t\t    </ul>\n\t\t            <iui-scrollbar *ngIf=\"isVerScrollVisible()\" [value]=\"currentScrollPos.y\" [max]=\"maxScrollPos.y\" [largeChange]=\"scrollLargeChange.y\" [height]=\"scrollBarSize.height\" (valueChanged)=\"onVerticalScrollChanged($event)\" (scrollStart)=\"onVerticalScrollStart($event)\" (scrollEnd)=\"onVerticalScrollEnd($event)\" #verScroll></iui-scrollbar>\n\t\t            <iui-scrollbar *ngIf=\"isHorScrollVisible()\" [orientation]=\"horScrollOrientation\" [value]=\"currentScrollPos.x\" [max]=\"maxScrollPos.x\" [width]=\"scrollBarSize.width\" (valueChanged)=\"onHorizontalScrollChanged($event)\" (scrollStart)=\"onHorizontalScrollStart($event)\" (scrollEnd)=\"onHorizontalScrollEnd($event)\" #horScroll></iui-scrollbar>\n\t\t            <div *ngIf=\"isVerScrollVisible() && isHorScrollVisible()\" style=\"background:#f5f5f5;position:absolute;right:0;bottom:0;width:16px;height:16px;\"></div>\n\t            </span>\n                <span *ngSwitchDefault>\n\t\t\t\t\t<ul style=\"margin:0;padding:0;\" #content>\n\t\t\t\t\t\t<ng-content></ng-content>\n\t\t\t\t\t</ul>\n\t            </span>\n            </div>\n\t\t</div>\n\t",
                inputs: ['allowDrag', 'allowDrop', 'allowFilter', 'allowFocus', 'appRef', 'beforeEdit', 'controlStyle', 'data', 'items', 'name', 'selectedItem', 'sorting', 'state', 'virtualMode'],
                outputs: ['afterSelect', 'beforeSelect', 'change', 'clear', 'dragDrop', 'dragOver', 'itemAdding', 'itemAdded', 'itemRemoving', 'itemRemoved', 'keyDown', 'keyPress', 'keyUp', 'loadComplete', 'scrollPosChanged', 'selectionChanged', 'updateComplete'],
                providers: [IntegralUIBaseService, IntegralUIDataService]
            },] },
];
/** @nocollapse */
IntegralUIListView.ctorParameters = function () { return [
    { type: IntegralUIDataService, },
    { type: IntegralUIDragDropService, },
    { type: ElementRef, },
    { type: Renderer, },
    { type: IntegralUICommonService, },
    { type: IntegralUIFilterService, },
    { type: ComponentFactoryResolver, },
    { type: IntegralUIBaseService, },
]; };
IntegralUIListView.propDecorators = {
    'contentList': [{ type: ContentChildren, args: [IntegralUIListItem,] },],
    'contentRef': [{ type: ViewChild, args: ['content', { read: ViewContainerRef },] },],
    'contentElem': [{ type: ViewChild, args: ['content', { read: ElementRef },] },],
    'itemElems': [{ type: ViewChildren, args: ['itemElem', { read: ElementRef },] },],
    'itemTemplate': [{ type: ContentChild, args: [TemplateRef,] },],
    'itemSize': [{ type: Input },],
    'scrollMode': [{ type: Input },],
};
//# sourceMappingURL=integralui.listview.js.map